{"version":3,"sources":["url.js","deleteButton.tsx","customDeleteToolbar.js","deleteButtonEdit.tsx","customBottomToolbar.js","empty.js","createNoRedirectBottomToolbar.js","office.js","discipline.js","teacher.js","group.js","customTextField.tsx","lesson.js","userbulkDeleteButton.tsx","userDeleteToolbar.js","createUserSaveButton.js","createUserFormBottom.js","userDeleteButtonEdit.tsx","userCustomBottomToolbar.js","user.js","authProvider.js","bottomToolbarProfile.js","profileEdit.js","dataProvider.js","appbar.js","editor.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","deleteButton","color","palette","error","main","backgroundColor","fade","name","CustomBulkDeleteWithUndoButton","props","basePath","classes","icon","label","onClick","resource","selectedIds","rest","notify","useNotify","unselectAll","useUnselectAll","refresh","useRefresh","dispath","useDispatch","useDeleteMany","action","CRUD_DELETE_MANY","onSuccess","smart_count","length","onFailure","message","undoable","deleteMany","loading","Button","e","token","localStorage","getItem","fetchUtils","fetchJson","url","method","body","JSON","stringify","headers","Headers","then","a","text","json","result","showNotification","className","disabled","sanitizeRestProps","filterValues","defaultProps","CustomDeleteToolbar","defaultIcon","DeleteWithUndoButton","record","redirect","redirectTo","useRedirect","useDelete","id","CRUD_DELETE","deleteOne","b","useCallback","event","stopPropagation","classnames","key","toolbar","display","justifyContent","CustomBottomToolbar","Toolbar","SaveButton","submitOnEnter","textAlign","opacity","type","margin","primary","width","height","marginTop","Empty","displayName","SvgIcon","component","Typography","variant","paragraph","CreateButton","CreateNoRedirectBottomToolbar","OfficeFilter","Filter","TextInput","source","alwaysOn","OfficeList","List","empty","MeetingRoomIcon","filters","title","bulkActionButtons","Datagrid","EditButton","OfficeEdit","Edit","SimpleForm","validate","required","OfficeCreate","Create","maxLength","max","value","undefined","DisciplineFilter","DisciplineList","BookIcon","DisciplineEdit","DisciplineCreate","TeacherFilter","TeacherList","PersonIcon","TeacherEdit","multiline","TeacherCreate","GroupFilter","GroupList","GroupIcon","GroupEdit","GroupCreate","TextField","emptyText","surname","patronymic","EnhancedTextField","pure","addLabel","propTypes","nameSurnamePatronymic","choice","LessonFilter","ReferenceInput","reference","allowEmpty","SelectInput","optionText","LessonList","DateRangeRoundedIcon","DateField","showTime","options","hour12","day","month","year","hour","minute","ReferenceField","LessonEdit","DateTimeInput","LessonCreate","UserBulkDeleteWithUndoButton","username","includes","UserCustomDeleteToolbar","CreateUserSaveButton","useCreate","create","dispatch","save","values","request","Request","fetch","resp","payload","data","newRecord","onSave","CreateUserBottomToolbar","UserDeleteWithUndoButton","UserCustomBottomToolbar","UserFilter","UserList","BooleanField","UserEdit","PasswordInput","fullWidth","BooleanInput","UserCreate","authProvider","login","password","response","status","Error","statusText","credentials","roles","setItem","logout","params","removeItem","Promise","resolve","checkAuth","reject","checkError","getPermissions","rolesArray","parse","ProfileBottomToolbar","oldPassword","success","ProfileEdit","staticContext","errors","repeatPassword","jsonServer","jsonServerProvider","Accept","set","CustomMenu","UserMenu","MenuItemLink","to","primaryText","leftIcon","MyAppBar","AppBar","userMenu","Layout","appBar","React","Component","perPage","i18nProvider","polyglotI18nProvider","russianMessages","App","Admin","dataProvider","getOne","update","customRoutes","path","appLayout","CustomLayout","permissions","Resource","list","edit","SupervisorAccountIcon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.e647f25e.chunk.js","sourcesContent":["export default 'https://schedule-web-server.herokuapp.com'","import React, { FC, ReactElement } from 'react';\n//@ts-ignore\nimport { useDispatch } from 'react-redux'\n//@ts-ignore\nimport { Button, ButtonProps, showNotification, fetchUtils } from 'react-admin';\nimport PropTypes from 'prop-types';\nimport ActionDelete from '@material-ui/icons/Delete';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    useDeleteMany,\n    useRefresh,\n    useNotify,\n    useUnselectAll,\n    CRUD_DELETE_MANY,\n    Identifier,\n} from 'ra-core';\nimport url from './url';\n\nconst useStyles = makeStyles(\n    theme => ({\n        deleteButton: {\n            color: theme.palette.error.main,\n            '&:hover': {\n                backgroundColor: fade(theme.palette.error.main, 0.12),\n                // Reset on mouse devices\n                '@media (hover: none)': {\n                    backgroundColor: 'transparent',\n                },\n            },\n        },\n    }),\n    { name: 'RaBulkDeleteWithUndoButton' }\n);\n\nconst CustomBulkDeleteWithUndoButton: FC<CustomBulkDeleteWithUndoButtonProps> = props => {\n    const {\n        basePath,\n        classes: classesOverride,\n        icon,\n        label,\n        onClick,\n        resource,\n        selectedIds,\n        ...rest\n    } = props;\n    const classes = useStyles(props);\n    const notify = useNotify();\n    const unselectAll = useUnselectAll();\n    const refresh = useRefresh();\n    const dispath = useDispatch(); \n    const [deleteMany, { loading }] = useDeleteMany(resource, selectedIds, {\n        action: CRUD_DELETE_MANY,\n        onSuccess: () => {\n            notify(\n                'ra.notification.deleted',\n                'info',\n                { smart_count: selectedIds.length },\n                true\n            );\n            unselectAll(resource);\n            refresh();\n        },\n        onFailure: (error: any) =>\n            notify(\n                typeof error === 'string'\n                    ? error\n                    : error.message || 'ra.notification.http_error',\n                'warning'\n            ),\n        undoable: true,\n    });\n\n    const handleClick = (e: any) => {\n        const token = localStorage.getItem('token');\n        fetchUtils.fetchJson(url + props.basePath + '/check', {\n            method: \"POST\",\n            body: JSON.stringify(\n                props.selectedIds\n            ),\n            //@ts-ignore\n            headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': token }),\n        }).then((a: any) => {\n            if(a.json.result === \"success\") {        \n                deleteMany();\n                if (typeof onClick === 'function') {\n                    onClick(e);\n                }\n            } else {\n                let text\n                if(props.selectedIds.length === 1) {\n                    text = 'У данной записи есть связи, сначала удалите их'\n                } else {\n                    text = 'У данных записей есть связи, сначала удалите их'\n                }\n                dispath(showNotification(text, 'warning'))\n            }\n        })\n    };\n\n    return (\n        <Button\n            onClick={handleClick}\n            label={label}\n            className={classes.deleteButton}\n            disabled={loading}\n            {...sanitizeRestProps(rest)}\n        >\n            {icon}\n        </Button>\n    );\n};\n\nconst sanitizeRestProps = ({\n    basePath,\n    classes,\n    filterValues,\n    label,\n    ...rest\n}: Omit<CustomBulkDeleteWithUndoButtonProps, 'resource' | 'selectedIds' | 'icon'>) =>\n    rest;\n\ninterface Props {\n    basePath?: string;\n    filterValues?: any;\n    icon: ReactElement;\n    resource: string;\n    selectedIds: Identifier[];\n}\n\nexport type CustomBulkDeleteWithUndoButtonProps = Props & ButtonProps;\n\nCustomBulkDeleteWithUndoButton.propTypes = {\n    basePath: PropTypes.string,\n    classes: PropTypes.object,\n    label: PropTypes.string,\n    resource: PropTypes.string.isRequired,\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n    icon: PropTypes.element,\n};\n\nCustomBulkDeleteWithUndoButton.defaultProps = {\n    label: 'ra.action.delete',\n    icon: <ActionDelete />,\n};\n\nexport default CustomBulkDeleteWithUndoButton;","import React, { Fragment } from 'react';\nimport CustomBulkDeleteWithUndoButton from './deleteButton.tsx'\n\nexport const CustomDeleteToolbar = (props) => (\n    <Fragment>\n        <CustomBulkDeleteWithUndoButton {...props} />\n    </Fragment>\n);","import React, { useCallback, FC, ReactElement, SyntheticEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport ActionDelete from '@material-ui/icons/Delete';\n//@ts-ignore\nimport classnames from 'classnames';\n//@ts-ignore\nimport { Button, ButtonProps, showNotification, fetchUtils } from 'react-admin';\nimport {\n    useDelete,\n    useRefresh,\n    useNotify,\n    useRedirect,\n    CRUD_DELETE,\n    Record,\n    RedirectionSideEffect,\n} from 'ra-core';\nimport url from './url';\n//@ts-ignore\nimport { useDispatch } from 'react-redux'\n\nconst DeleteWithUndoButton: FC<DeleteWithUndoButtonProps> = props => {\n    const {\n        label = 'ra.action.delete',\n        classes: classesOverride,\n        className,\n        icon = defaultIcon,\n        onClick,\n        resource,\n        record,\n        basePath,\n        redirect: redirectTo = 'list',\n        ...rest\n    } = props;\n    const classes = useStyles(props);\n    const notify = useNotify();\n    const redirect = useRedirect();\n    const refresh = useRefresh();\n    const dispath = useDispatch(); \n\n    const [deleteOne, { loading }] = useDelete(resource, record.id, record, {\n        action: CRUD_DELETE,\n        onSuccess: () => {\n            notify('ra.notification.deleted', 'info', { smart_count: 1 }, true);\n            redirect(redirectTo, basePath);\n            refresh();\n        },\n        onFailure: (error: any) =>\n            notify(\n                typeof error === 'string'\n                    ? error\n                    : error.message || 'ra.notification.http_error',\n                'warning'\n            ),\n        undoable: true,\n    });\n    const b = useCallback(\n        event => {\n            event.stopPropagation();\n            deleteOne();\n            if (typeof onClick === 'function') {\n                onClick(event);\n            }\n        },\n        [deleteOne, onClick]\n    );\n    const handleDelete = (e: any) => {\n        const token = localStorage.getItem('token');\n        fetchUtils.fetchJson(url + props.basePath + '/check', {\n            method: \"POST\",\n            body: JSON.stringify(\n                props.selectedIds\n            ),\n            //@ts-ignore\n            headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': token }),\n        }).then((a: any) => {\n            if(a.json.result === \"success\") {        \n                b(e)\n            } else {\n                let text\n                if(props.selectedIds.length === 1) {\n                    text = 'У данной записи есть связи, сначала удалите их'\n                } else {\n                    text = 'У данных записей есть связи, сначала удалите их'\n                }\n                dispath(showNotification(text, 'warning'))\n            }\n        })\n\n    }\n\n    return (\n        <Button\n            onClick={handleDelete}\n            disabled={loading}\n            label={label}\n            className={classnames(\n                'ra-delete-button',\n                classes.deleteButton,\n                className\n            )}\n            key=\"button\"\n            {...rest}\n        >\n            {icon}\n        </Button>\n    );\n};\n\nconst useStyles = makeStyles(\n    theme => ({\n        deleteButton: {\n            color: theme.palette.error.main,\n            '&:hover': {\n                backgroundColor: fade(theme.palette.error.main, 0.12),\n                // Reset on mouse devices\n                '@media (hover: none)': {\n                    backgroundColor: 'transparent',\n                },\n            },\n        },\n    }),\n    { name: 'RaDeleteWithUndoButton' }\n);\n\ninterface Props {\n    basePath?: string;\n    classes?: object;\n    className?: string;\n    icon?: ReactElement;\n    label?: string;\n    onClick?: (e: MouseEvent) => void;\n    record?: Record;\n    redirect?: RedirectionSideEffect;\n    resource?: string;\n    // May be injected by Toolbar - sanitized in Button\n    handleSubmit?: (event?: SyntheticEvent<HTMLFormElement>) => Promise<Object>;\n    handleSubmitWithRedirect?: (redirect?: RedirectionSideEffect) => void;\n    invalid?: boolean;\n    pristine?: boolean;\n    saving?: boolean;\n    submitOnEnter?: boolean;\n    undoable?: boolean;\n}\n\nconst defaultIcon = <ActionDelete />;\n\nexport type DeleteWithUndoButtonProps = Props & ButtonProps;\n\nDeleteWithUndoButton.propTypes = {\n    basePath: PropTypes.string,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    label: PropTypes.string,\n    record: PropTypes.any,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    resource: PropTypes.string,\n    icon: PropTypes.element,\n};\n\nexport default DeleteWithUndoButton;","import React from 'react';\nimport { SaveButton, Toolbar } from 'react-admin';\nimport DeleteWithUndoButton from './deleteButtonEdit.tsx'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n});\n\nexport const CustomBottomToolbar = props => (\n    <Toolbar {...props} classes={useStyles()}>\n        <SaveButton\n            label=\"СОХРАНИТЬ\"\n            redirect={false}\n            submitOnEnter={true}\n        />\n        <DeleteWithUndoButton selectedIds={[props.id]}/>\n    </Toolbar>\n);","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { CreateButton } from 'react-admin';\r\nimport { SvgIcon } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(\r\n    theme => ({\r\n        message: {\r\n            textAlign: 'center',\r\n            opacity: theme.palette.type === 'light' ? 0.5 : 0.8,\r\n            margin: '0 1em',\r\n            color:\r\n                theme.palette.type === 'light'\r\n                    ? 'inherit'\r\n                    : theme.palette.text.primary,\r\n        },\r\n        icon: {\r\n            width: '9em',\r\n            height: '9em',\r\n        },\r\n        toolbar: {\r\n            textAlign: 'center',\r\n            marginTop: '2em',\r\n        },\r\n    }),\r\n    { name: 'RaEmpty' }\r\n);\r\n\r\nconst Empty = props => {\r\n    const { basePath, displayName, icon } = props;\r\n    const classes = useStyles(props);\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.message}>\r\n            <SvgIcon component={icon}  className={classes.icon} />\r\n                <Typography variant=\"h4\" paragraph>\r\n                    {`${displayName} нет.`}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                    {`Желаете создать?`}\r\n                </Typography>\r\n                <br/><br/>\r\n                <Typography variant=\"body1\">\r\n                    {`Если вы уверены, что они должны быть, проверьте соединение с сервером`}\r\n                </Typography>\r\n            </div>\r\n            <div className={classes.toolbar}>\r\n                <CreateButton variant=\"contained\" basePath={basePath} />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Empty;","import React from 'react';\r\nimport {\r\n    Toolbar,\r\n    SaveButton\r\n} from 'react-admin';\r\n\r\nexport const CreateNoRedirectBottomToolbar = props => {\r\n    return <Toolbar {...props}>\r\n        <SaveButton\r\n            {...props}\r\n            redirect={false}\r\n        />\r\n    </Toolbar>\r\n};","import React from 'react';\nimport { List, Datagrid, TextField, EditButton, Edit, SimpleForm, TextInput, Create, Filter, required } from 'react-admin';\nimport { CustomDeleteToolbar } from './customDeleteToolbar'\nimport { CustomBottomToolbar } from './customBottomToolbar'\nimport Empty from './empty'\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport { CreateNoRedirectBottomToolbar } from './createNoRedirectBottomToolbar'\n\nconst OfficeFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Поиск\" source=\"q\" alwaysOn />\n    </Filter>\n);\n\nexport const OfficeList = props => (\n    <List empty={<Empty displayName=\"Аудиторий\" icon={MeetingRoomIcon}/>} filters={<OfficeFilter />} {...props} title='Аудитории' bulkActionButtons={<CustomDeleteToolbar />}>\n        <Datagrid>\n            <TextField source=\"id\" label=\"Номер\" />\n            <TextField source=\"office\" label=\"Аудитория\" />\n            <EditButton />\n        </Datagrid>\n    </List>\n);\n\nexport const OfficeEdit = props => (\n    <Edit {...props} title={'Редактирование аудитории #' + props.id}>\n        <SimpleForm toolbar={<CustomBottomToolbar {...props} />}>\n            <TextInput disabled source=\"id\" />\n            <TextInput source=\"office\" label=\"Аудитория\" validate={[required()]} />\n        </SimpleForm>\n    </Edit>\n);\n\nexport const OfficeCreate = props => (\n    <Create {...props} title='Создание аудитории'>\n        <SimpleForm toolbar={<CreateNoRedirectBottomToolbar {...props} />} >\n            <TextInput source=\"office\" label=\"Аудитория\" validate={[required()]} />\n        </SimpleForm>\n    </Create>\n);","import React from 'react';\nimport { List, Datagrid, TextField, EditButton, Edit, SimpleForm, TextInput, Create, Filter, required } from 'react-admin';\nimport { CustomDeleteToolbar } from './customDeleteToolbar'\nimport { CustomBottomToolbar } from './customBottomToolbar'\nimport Empty from './empty'\nimport BookIcon from '@material-ui/icons/Book';\nimport { CreateNoRedirectBottomToolbar } from './createNoRedirectBottomToolbar'\n\nconst maxLength = (max, message = 'Слишком длинное название предмета. Используйте сокращенную форму') =>\n    value => value && value.length > max ? message : undefined;\n\nconst DisciplineFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Посик\" source=\"q\" alwaysOn />\n    </Filter>\n);\n\nexport const DisciplineList = props => (\n    <List empty={<Empty displayName=\"Предметов\" icon={BookIcon}/>} filters={<DisciplineFilter />} {...props} title='Предметы' bulkActionButtons={<CustomDeleteToolbar />}>\n        <Datagrid>\n            <TextField source=\"id\" label=\"Номер\"/>\n            <TextField source=\"name\" label=\"Название предмета\" />\n            <TextField source=\"shortName\" label=\"Краткое название предмета\" />\n            <EditButton />\n        </Datagrid>\n    </List>\n);\n\nexport const DisciplineEdit = props => (\n    <Edit {...props} title={'Редактирование предмета #' + props.id}>\n        <SimpleForm toolbar={<CustomBottomToolbar {...props} />}>\n            <TextInput disabled source=\"id\" />\n            <TextInput source=\"name\" label=\"Название предмета\" validate={[required()]} />\n            <TextInput source=\"shortName\" label=\"Краткое название предмета\" validate={[required(), maxLength(10)]}/>\n        </SimpleForm>\n    </Edit>\n);\n\nexport const DisciplineCreate = props => (\n    <Create {...props} title='Создание предмета'>\n        <SimpleForm toolbar={<CreateNoRedirectBottomToolbar {...props} />} >\n            <TextInput source=\"name\" label=\"Название предмета\" validate={[required()]} />\n            <TextInput source=\"shortName\" label=\"Краткое название предмета\" validate={[required(), maxLength(10)]}/>\n        </SimpleForm>\n    </Create>\n);","import React from 'react';\nimport { List, Datagrid, TextField, EditButton, Edit, SimpleForm, TextInput, Create, Filter, required } from 'react-admin';\nimport { CustomDeleteToolbar } from './customDeleteToolbar'\nimport { CustomBottomToolbar } from './customBottomToolbar'\nimport Empty from './empty'\nimport PersonIcon from '@material-ui/icons/Person';\nimport { CreateNoRedirectBottomToolbar } from './createNoRedirectBottomToolbar'\n\nconst TeacherFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Поиск\" source=\"q\" alwaysOn />\n    </Filter>\n);\n\nexport const TeacherList = props => (\n    <List empty={<Empty displayName=\"Преподавателей\" icon={PersonIcon}/>} filters={< TeacherFilter />} {...props} title='Преподаватели' bulkActionButtons={<CustomDeleteToolbar />}>\n        <Datagrid>\n            <TextField source=\"id\" label=\"Номер\" />\n            <TextField source=\"surname\" label=\"Фамилия\" />\n            <TextField source=\"name\" label=\"Имя\" />\n            <TextField source=\"patronymic\" label=\"Отчество\" />\n            <TextField source=\"phoneNumber\" label=\"Номер телефона\" />\n            <TextField source=\"description\" label=\"Краткая информация\"  />\n            <EditButton />\n        </Datagrid>\n    </List>\n);\n\nexport const TeacherEdit = props => (\n    <Edit {...props} title={'Редактирование преподавателя #' + props.id}>\n        <SimpleForm toolbar={<CustomBottomToolbar {...props} />}>\n            <TextInput disabled source=\"id\" />\n            <TextInput source=\"surname\" label=\"Фамилия\" validate={[required()]} />\n            <TextInput source=\"name\" label=\"Имя\" validate={[required()]} />\n            <TextInput source=\"patronymic\" label=\"Отчество\" validate={[required()]} />\n            <TextInput source=\"phoneNumber\" label=\"Номер телефона\" validate={[required()]} />\n            <TextInput source=\"description\" multiline label=\"Краткая информация\" validate={[required()]} />\n        </SimpleForm>\n    </Edit>\n);\n\nexport const TeacherCreate = props => (\n    <Create {...props}  title='Создание преподавателя'>\n        <SimpleForm toolbar={<CreateNoRedirectBottomToolbar {...props} />} >\n            <TextInput source=\"surname\" label=\"Фамилия\" validate={[required()]} />\n            <TextInput source=\"name\" label=\"Имя\" validate={[required()]} />\n            <TextInput source=\"patronymic\" label=\"Отчество\" validate={[required()]} />\n            <TextInput source=\"phoneNumber\" label=\"Номер телефона\" validate={[required()]} />\n            <TextInput source=\"description\" multiline label=\"Краткая информация\" validate={[required()]} />\n        </SimpleForm>\n    </Create>\n);","import React from 'react';\nimport { List, Datagrid, TextField, EditButton, Edit, SimpleForm, Create, Filter, TextInput, required } from 'react-admin';\nimport { CustomDeleteToolbar } from './customDeleteToolbar'\nimport { CustomBottomToolbar } from './customBottomToolbar'\nimport Empty from './empty'\nimport GroupIcon from '@material-ui/icons/Group';\nimport { CreateNoRedirectBottomToolbar } from './createNoRedirectBottomToolbar'\n\n\nconst GroupFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Поиск\" source=\"q\" alwaysOn />\n    </Filter>\n);\n\nexport const GroupList = props => (\n    <List empty={<Empty displayName=\"Групп\" icon={GroupIcon}/>} filters={<GroupFilter />} {...props} title='Группы' bulkActionButtons={<CustomDeleteToolbar />}>\n        <Datagrid>\n            <TextField source=\"id\" label=\"Номер\" />\n            <TextField source=\"name\" label=\"Номер группы\" />\n            <EditButton />\n        </Datagrid>\n    </List>\n);\n\nexport const GroupEdit = props => (\n    <Edit {...props} title={'Редактирование группы #' + props.id}>\n        <SimpleForm toolbar={<CustomBottomToolbar {...props} />}>\n            <TextInput disabled source=\"id\" />\n            <TextInput source=\"name\" label=\"Номер группы\" validate={[required()]} />\n        </SimpleForm>\n    </Edit>\n);\n\nexport const GroupCreate = props => (\n    <Create {...props} title='Создание группы'>\n        <SimpleForm toolbar={<CreateNoRedirectBottomToolbar {...props} />} >\n            <TextInput source=\"name\" label=\"Номер группы\" validate={[required()]} />\n        </SimpleForm>\n    </Create>\n);\n","import React, { FunctionComponent } from 'react';\n//@ts-ignore\nimport pure from 'recompose/pure';\nimport Typography, { TypographyProps } from '@material-ui/core/Typography';\n\n// import sanitizeRestProps from './sanitizeRestProps';\n\n//@ts-ignore\nimport { FieldProps, InjectedFieldProps } from 'react-admin';\n\nconst TextField: FunctionComponent<\n    FieldProps & InjectedFieldProps & TypographyProps\n> = ({ className, source, record = {}, emptyText, ...rest }) => {\n    const value = record.surname + ' ' + record.name + ' ' + record.patronymic;\n\n    return (\n        <Typography\n            component=\"span\"\n            variant=\"body2\"\n            className={className}\n        >\n            {value != null && typeof value !== 'string'\n                ? JSON.stringify(value)\n                : value || emptyText}\n        </Typography>\n    );\n};\n\n// wat? TypeScript looses the displayName if we don't set it explicitly\nTextField.displayName = 'TextField';\n\nconst EnhancedTextField = pure(TextField);\n\nEnhancedTextField.defaultProps = {\n    addLabel: true,\n};\n\nEnhancedTextField.propTypes = {\n    // @ts-ignore\n    ...Typography.propTypes,\n};\n\nEnhancedTextField.displayName = 'EnhancedTextField';\n\nexport default EnhancedTextField;","import React from 'react';\nimport { List, Datagrid, TextField, DateField, ReferenceField, EditButton, Edit, SimpleForm, DateTimeInput, ReferenceInput, SelectInput, Create, Filter, required, TextInput } from 'react-admin';\nimport CTextField from './customTextField.tsx'\nimport Empty from './empty'\nimport DateRangeRoundedIcon from '@material-ui/icons/DateRangeRounded';\nimport { CreateNoRedirectBottomToolbar } from './createNoRedirectBottomToolbar'\n\nconst nameSurnamePatronymic = choice => `${choice.surname} ${choice.name} ${choice.patronymic}`\n\nconst LessonFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Поиск по id\" source=\"q\" alwaysOn />\n        <ReferenceInput label=\"Группа\" source=\"group\" reference=\"groups\" allowEmpty>\n            <SelectInput optionText=\"name\" />\n        </ReferenceInput>\n        <ReferenceInput label=\"Преподаватель\" source=\"teacher\" reference=\"teachers\" allowEmpty>\n            <SelectInput optionText={nameSurnamePatronymic} />\n        </ReferenceInput>\n        <ReferenceInput label=\"Аудитория\" source=\"office\" reference=\"offices\" allowEmpty>\n            <SelectInput optionText=\"office\" />\n        </ReferenceInput>\n        <ReferenceInput label=\"Предмет\" source=\"discipline\" reference=\"disciplines\" allowEmpty>\n            <SelectInput optionText=\"name\" />\n        </ReferenceInput>\n    </Filter>\n);\n\nexport const LessonList = props => (\n    <List empty={<Empty displayName=\"Пар\" icon={DateRangeRoundedIcon}/>} filters={<LessonFilter />} {...props} title='Пары'>\n        <Datagrid>\n            <TextField source=\"id\" label=\"Номер\" />\n            <DateField source=\"startTime\" showTime label=\"Время начала\"options={{hour12:false, day:'numeric',month:'numeric',year:'numeric',hour:'numeric',minute:'numeric'}}  />\n            <DateField source=\"endTime\" showTime label=\"Время конца\" options={{hour12:false, day:'numeric',month:'numeric',year:'numeric',hour:'numeric',minute:'numeric'}} />\n            <ReferenceField source=\"teacher\" reference=\"teachers\" label=\"Преподаватель\" >\n                <CTextField source=\"name\" />\n            </ReferenceField>\n            <ReferenceField source=\"office\" reference=\"offices\" label=\"Аудитория\" >\n                <TextField source=\"office\" />\n            </ReferenceField>\n            <ReferenceField source=\"group\" reference=\"groups\" label=\"Группа\" >\n                <TextField source=\"name\" />\n            </ReferenceField>\n            <ReferenceField source=\"discipline\" reference=\"disciplines\" label=\"Предмет\" >\n                <TextField source=\"name\" />\n            </ReferenceField>\n            <EditButton />\n        </Datagrid>\n    </List>\n);\n\nexport const LessonEdit = props => (\n    <Edit {...props} title={'Редактирование пары #' + props.id}>\n        <SimpleForm>\n            <TextInput disabled source=\"id\" />\n            <DateTimeInput source=\"startTime\" label=\"Время начала\" validate={[required()]} />\n            <DateTimeInput source=\"endTime\" label=\"Время конца\" validate={[required()]} />\n            <ReferenceInput source=\"teacher\" reference=\"teachers\" label=\"Преподаватель\" validate={[required()]} >\n                <SelectInput optionText={nameSurnamePatronymic} />\n            </ReferenceInput>\n            <ReferenceInput source=\"office\" reference=\"offices\" label=\"Аудитория\" validate={[required()]} >\n                <SelectInput optionText=\"office\"/>\n            </ReferenceInput>\n            <ReferenceInput source=\"group\" reference=\"groups\" label=\"Группа\" validate={[required()]} >\n                <SelectInput optionText=\"name\" />\n            </ReferenceInput>\n            <ReferenceInput source=\"discipline\" reference=\"disciplines\" label=\"Предмет\" validate={[required()]} >\n                <SelectInput optionText=\"name\" />\n            </ReferenceInput>\n        </SimpleForm>\n    </Edit>\n);\n\nexport const LessonCreate = props => (\n    <Create {...props} title='Создание пары'>\n        <SimpleForm toolbar={<CreateNoRedirectBottomToolbar {...props} />} >\n            <DateTimeInput source=\"startTime\" label=\"Время начала\" validate={[required()]} />\n            <DateTimeInput source=\"endTime\" label=\"Время конца\" validate={[required()]} />\n            <ReferenceInput source=\"teacher\" reference=\"teachers\" label=\"Преподаватель\" validate={[required()]} >\n                <SelectInput optionText={nameSurnamePatronymic} />\n            </ReferenceInput>\n            <ReferenceInput source=\"office\" reference=\"offices\" label=\"Аудитория\" validate={[required()]} >\n                <SelectInput optionText=\"office\" />\n            </ReferenceInput>\n            <ReferenceInput source=\"group\" reference=\"groups\" label=\"Группа\" validate={[required()]} >\n                <SelectInput optionText=\"name\" />\n            </ReferenceInput>\n            <ReferenceInput source=\"discipline\" reference=\"disciplines\" label=\"Предмет\" validate={[required()]} >\n                <SelectInput optionText=\"name\" />\n            </ReferenceInput>\n        </SimpleForm>\n    </Create>\n);","import React, { FC, ReactElement } from 'react';\r\n//@ts-ignore\r\nimport { useDispatch } from 'react-redux'\r\n//@ts-ignore\r\nimport { Button, ButtonProps, showNotification } from 'react-admin';\r\nimport PropTypes from 'prop-types';\r\nimport ActionDelete from '@material-ui/icons/Delete';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    useDeleteMany,\r\n    useRefresh,\r\n    useNotify,\r\n    useUnselectAll,\r\n    CRUD_DELETE_MANY,\r\n    Identifier,\r\n} from 'ra-core';\r\n\r\nconst useStyles = makeStyles(\r\n    theme => ({\r\n        deleteButton: {\r\n            color: theme.palette.error.main,\r\n            '&:hover': {\r\n                backgroundColor: fade(theme.palette.error.main, 0.12),\r\n                // Reset on mouse devices\r\n                '@media (hover: none)': {\r\n                    backgroundColor: 'transparent',\r\n                },\r\n            },\r\n        },\r\n    }),\r\n    { name: 'RaBulkDeleteWithUndoButton' }\r\n);\r\n\r\nconst UserBulkDeleteWithUndoButton: FC<UserBulkDeleteWithUndoButtonProps> = props => {\r\n    const {\r\n        basePath,\r\n        classes: classesOverride,\r\n        icon,\r\n        label,\r\n        onClick,\r\n        resource,\r\n        selectedIds,\r\n        ...rest\r\n    } = props;\r\n    const classes = useStyles(props);\r\n    const notify = useNotify();\r\n    const unselectAll = useUnselectAll();\r\n    const refresh = useRefresh();\r\n    const dispath = useDispatch(); \r\n    const [deleteMany, { loading }] = useDeleteMany(resource, selectedIds, {\r\n        action: CRUD_DELETE_MANY,\r\n        onSuccess: () => {\r\n            notify(\r\n                'ra.notification.deleted',\r\n                'info',\r\n                { smart_count: selectedIds.length },\r\n                true\r\n            );\r\n            unselectAll(resource);\r\n            refresh();\r\n        },\r\n        onFailure: (error: any) =>\r\n            notify(\r\n                typeof error === 'string'\r\n                    ? error\r\n                    : error.message || 'ra.notification.http_error',\r\n                'warning'\r\n            ),\r\n        undoable: true,\r\n    });\r\n\r\n    const handleClick = (e: any) => {\r\n        const username = localStorage.getItem('username');\r\n        if(props.selectedIds.includes(username)){\r\n            dispath(showNotification(\"Вы не можете удалить самого себя!!!\", 'warning'))\r\n        } else {\r\n            deleteMany();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Button\r\n            onClick={handleClick}\r\n            label={label}\r\n            className={classes.deleteButton}\r\n            disabled={loading}\r\n            {...sanitizeRestProps(rest)}\r\n        >\r\n            {icon}\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst sanitizeRestProps = ({\r\n    basePath,\r\n    classes,\r\n    filterValues,\r\n    label,\r\n    ...rest\r\n}: Omit<UserBulkDeleteWithUndoButtonProps, 'resource' | 'selectedIds' | 'icon'>) =>\r\n    rest;\r\n\r\ninterface Props {\r\n    basePath?: string;\r\n    filterValues?: any;\r\n    icon: ReactElement;\r\n    resource: string;\r\n    selectedIds: Identifier[];\r\n}\r\n\r\nexport type UserBulkDeleteWithUndoButtonProps = Props & ButtonProps;\r\n\r\nUserBulkDeleteWithUndoButton.propTypes = {\r\n    basePath: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    label: PropTypes.string,\r\n    resource: PropTypes.string.isRequired,\r\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n    icon: PropTypes.element,\r\n};\r\n\r\nUserBulkDeleteWithUndoButton.defaultProps = {\r\n    label: 'ra.action.delete',\r\n    icon: <ActionDelete />,\r\n};\r\n\r\nexport default UserBulkDeleteWithUndoButton;","import React, { Fragment } from 'react';\r\nimport UserBulkDeleteWithUndoButton from './userbulkDeleteButton.tsx'\r\n\r\nexport const UserCustomDeleteToolbar = (props) => (\r\n    <Fragment>\r\n        <UserBulkDeleteWithUndoButton {...props} />\r\n    </Fragment>\r\n);","import React, { useCallback } from 'react';\r\nimport {\r\n    SaveButton,\r\n    useCreate,\r\n    useRedirect,\r\n    useNotify,\r\n    showNotification,\r\n} from 'react-admin';\r\nimport { useDispatch } from 'react-redux'\r\nimport url from './url'\r\n\r\nexport const CreateUserSaveButton = props => {\r\n    const [create] = useCreate('users');\r\n    const redirectTo = useRedirect();\r\n    const notify = useNotify();\r\n    const { basePath } = props;\r\n    const dispatch = useDispatch()\r\n\r\n    const save = useCallback(\r\n        (values, redirect) => {\r\n            const token = localStorage.getItem('token');\r\n            const request = new Request(url + '/users/isUsernameTaken', {\r\n                method: 'POST',\r\n                body: values.id,\r\n                headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': token }),\r\n            });\r\n            fetch(request).then(resp => {\r\n                resp.text().then(body => {\r\n                    if(body === \"false\"){\r\n                        create(\r\n                            {\r\n                                payload: { data: { ...values } },\r\n                            },\r\n                            {\r\n                                onSuccess: ({ data: newRecord }) => {\r\n                                    notify('ra.notification.created', 'info', {\r\n                                        smart_count: 1,\r\n                                    });\r\n                                    redirectTo(redirect, basePath, newRecord.id, newRecord);\r\n                                },\r\n                            }\r\n                        );\r\n                    } else { \r\n                        dispatch(showNotification(\"Аккаунт с таким логином уже существует\", \"warning\"))\r\n                    }\r\n                })\r\n            })\r\n            \r\n        },\r\n        [create, notify, redirectTo, basePath]\r\n    )\r\n\r\n    return <SaveButton {...props} onSave={save}/>\r\n}","import React from 'react';\r\nimport {\r\n    Toolbar,\r\n} from 'react-admin';\r\n\r\nimport {CreateUserSaveButton} from './createUserSaveButton'\r\n\r\nexport const CreateUserBottomToolbar = props => {\r\n    return <Toolbar {...props}>\r\n        <CreateUserSaveButton\r\n            {...props}\r\n            label=\"СОХРАНИТЬ\"\r\n            redirect={false}\r\n            submitOnEnter={true}\r\n        />\r\n    </Toolbar>\r\n};","import React, { useCallback, FC, ReactElement, SyntheticEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport ActionDelete from '@material-ui/icons/Delete';\n//@ts-ignore\nimport classnames from 'classnames';\n//@ts-ignore\nimport { Button, ButtonProps, showNotification } from 'react-admin';\nimport {\n    useDelete,\n    useRefresh,\n    useNotify,\n    useRedirect,\n    CRUD_DELETE,\n    Record,\n    RedirectionSideEffect,\n} from 'ra-core';\n//@ts-ignore\nimport { useDispatch } from 'react-redux'\n\nconst UserDeleteWithUndoButton: FC<UserDeleteWithUndoButtonProps> = props => {\n    const {\n        label = 'ra.action.delete',\n        classes: classesOverride,\n        className,\n        icon = defaultIcon,\n        onClick,\n        resource,\n        record,\n        basePath,\n        redirect: redirectTo = 'list',\n        ...rest\n    } = props;\n    const classes = useStyles(props);\n    const notify = useNotify();\n    const redirect = useRedirect();\n    const refresh = useRefresh();\n    const dispath = useDispatch(); \n\n    const [deleteOne, { loading }] = useDelete(resource, record.id, record, {\n        action: CRUD_DELETE,\n        onSuccess: () => {\n            notify('ra.notification.deleted', 'info', { smart_count: 1 }, true);\n            redirect(redirectTo, basePath);\n            refresh();\n        },\n        onFailure: (error: any) =>\n            notify(\n                typeof error === 'string'\n                    ? error\n                    : error.message || 'ra.notification.http_error',\n                'warning'\n            ),\n        undoable: true,\n    });\n    const b = useCallback(\n        event => {\n            event.stopPropagation();\n            deleteOne();\n            if (typeof onClick === 'function') {\n                onClick(event);\n            }\n        },\n        [deleteOne, onClick]\n    );\n    const handleDelete = (e: any) => {\n        const username = localStorage.getItem('username');\n        if(props.selectedIds.includes(username)){\n            dispath(showNotification(\"Вы не можете удалить самого себя!!!\", 'warning'))\n        } else {\n            b(e);\n        }\n    }\n\n    return (\n        <Button\n            onClick={handleDelete}\n            disabled={loading}\n            label={label}\n            className={classnames(\n                'ra-delete-button',\n                classes.deleteButton,\n                className\n            )}\n            key=\"button\"\n            {...rest}\n        >\n            {icon}\n        </Button>\n    );\n};\n\nconst useStyles = makeStyles(\n    theme => ({\n        deleteButton: {\n            color: theme.palette.error.main,\n            '&:hover': {\n                backgroundColor: fade(theme.palette.error.main, 0.12),\n                // Reset on mouse devices\n                '@media (hover: none)': {\n                    backgroundColor: 'transparent',\n                },\n            },\n        },\n    }),\n    { name: 'RaDeleteWithUndoButton' }\n);\n\ninterface Props {\n    basePath?: string;\n    classes?: object;\n    className?: string;\n    icon?: ReactElement;\n    label?: string;\n    onClick?: (e: MouseEvent) => void;\n    record?: Record;\n    redirect?: RedirectionSideEffect;\n    resource?: string;\n    // May be injected by Toolbar - sanitized in Button\n    handleSubmit?: (event?: SyntheticEvent<HTMLFormElement>) => Promise<Object>;\n    handleSubmitWithRedirect?: (redirect?: RedirectionSideEffect) => void;\n    invalid?: boolean;\n    pristine?: boolean;\n    saving?: boolean;\n    submitOnEnter?: boolean;\n    undoable?: boolean;\n}\n\nconst defaultIcon = <ActionDelete />;\n\nexport type UserDeleteWithUndoButtonProps = Props & ButtonProps;\n\nUserDeleteWithUndoButton.propTypes = {\n    basePath: PropTypes.string,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    label: PropTypes.string,\n    record: PropTypes.any,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    resource: PropTypes.string,\n    icon: PropTypes.element,\n};\n\nexport default UserDeleteWithUndoButton;","import React from 'react';\nimport { SaveButton, Toolbar } from 'react-admin';\nimport UserDeleteWithUndoButton from './userDeleteButtonEdit.tsx'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n});\n\nexport const UserCustomBottomToolbar = props => (\n    <Toolbar {...props} classes={useStyles()}>\n        <SaveButton\n            label=\"СОХРАНИТЬ\"\n            redirect={false}\n            submitOnEnter={true}\n        />\n        <UserDeleteWithUndoButton selectedIds={[props.id]}/>\n    </Toolbar>\n);","import React from 'react';\r\nimport { List, Datagrid, TextField, EditButton, Edit, SimpleForm, Create, Filter, TextInput, required, BooleanField, BooleanInput, PasswordInput } from 'react-admin';\r\nimport { UserCustomDeleteToolbar } from './userDeleteToolbar'\r\nimport { CreateUserBottomToolbar } from './createUserFormBottom'\r\nimport { UserCustomBottomToolbar }  from './userCustomBottomToolbar'\r\nimport Empty from './empty'\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\nconst UserFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Поиск\" source=\"q\" alwaysOn />\r\n    </Filter>\r\n);\r\n\r\nexport const UserList = props => (\r\n    <List empty={<Empty displayName=\"Пользователей\" icon={GroupIcon}/>} filters={<UserFilter />} {...props} title='Пользователи' bulkActionButtons={<UserCustomDeleteToolbar />}>\r\n        <Datagrid>\r\n            <TextField source=\"id\" label=\"Логин\" />\r\n            <TextField source=\"hashedPassword\" label=\"Пароль\" />\r\n            <BooleanField source=\"canEditUsers\" label=\"Права администратора\" />\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const UserEdit = props => (\r\n    <Edit {...props} title={'Редактирование пользователя ' + props.id}>\r\n        <SimpleForm toolbar={<UserCustomBottomToolbar {...props} />}>\r\n            <TextInput disabled source=\"id\" />\r\n            {  \r\n            (localStorage.getItem('username') === props.id)\r\n                 ?\r\n                <PasswordInput source=\"hashedPassword\" label=\"Пароль (оставьте это поле пустым, если не хотите менять пароль)\" fullWidth={true} disabled /> : \r\n                <PasswordInput source=\"hashedPassword\" label=\"Пароль (оставьте это поле пустым, если не хотите менять пароль)\" fullWidth={true} />\r\n            }\r\n            {\r\n                (localStorage.getItem('username') === props.id)\r\n                 ?\r\n                <BooleanInput source=\"canEditUsers\" label=\"Права администратора\" validate={[required()]} disabled /> : \r\n                <BooleanInput source=\"canEditUsers\" label=\"Права администратора\" validate={[required()]} />\r\n            }\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const UserCreate = props => (\r\n    <Create {...props} title='Создание пользователя'>\r\n        <SimpleForm toolbar={<CreateUserBottomToolbar {...props} />}>\r\n            <TextInput source=\"id\" label=\"Логин\" validate={[required()]}/>\r\n            <PasswordInput source=\"hashedPassword\" label=\"Пароль\" validate={[required()]}/>\r\n            <BooleanInput source=\"canEditUsers\" label=\"Права администратора\"/>\r\n        </SimpleForm>\r\n    </Create>\r\n);","import url from './url'\r\n\r\nconst authProvider = {\r\n    login: ({ username, password }) =>  {\r\n        const request = new Request(url + '/authorize', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ username, password }),\r\n            headers: new Headers({ 'Content-Type': 'application/json' }),\r\n        });\r\n        return fetch(request)\r\n            .then(response => {\r\n                if(response.status === 401) {\r\n                    throw new Error(\"Неверный логин или пароль\");\r\n                } else if (response.status < 200 || response.status >= 300) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(({ credentials, roles, username }) => {\r\n                localStorage.setItem('token', credentials);\r\n                localStorage.setItem('roles', JSON.stringify(roles));\r\n                localStorage.setItem('username', username);\r\n            });\r\n    },\r\n    logout: params => {\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('roles')\r\n        localStorage.removeItem('username')\r\n        return Promise.resolve()\r\n    },\r\n    checkAuth: params =>  localStorage.getItem('token')\r\n                            ? Promise.resolve()\r\n                            : Promise.reject(),\r\n    checkError: error => Promise.resolve(),\r\n    getPermissions: params => {\r\n        const roles = localStorage.getItem('roles');\r\n        if(roles) {\r\n            const rolesArray = JSON.parse(roles)\r\n            return Promise.resolve(rolesArray)\r\n        } else {\r\n            return Promise.reject()\r\n        }  \r\n    },\r\n};\r\n\r\nexport default authProvider","import React from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { SaveButton, Toolbar, showNotification } from 'react-admin';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport url from './url'\r\n\r\nconst useStyles = makeStyles({\r\n    toolbar: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n});\r\n\r\nexport const ProfileBottomToolbar = props => {\r\n    const dispatch = useDispatch()\r\n\r\n    return <Toolbar {...props} classes={useStyles()}>\r\n        <SaveButton\r\n            undoable={false}\r\n            label=\"СОХРАНИТЬ\"\r\n            redirect={false}\r\n            submitOnEnter={true}\r\n            onSave={(data) => {\r\n                const token = localStorage.getItem('token');\r\n                const request = new Request(url + '/changePassword', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({ oldPassword: data.oldPassword, password: data.password }),\r\n                    headers: new Headers({ 'Content-Type': 'application/json', 'Authorization': token }),\r\n                });\r\n                return new Promise((resolve, reject) => {    \r\n                    fetch(request).then(resp => {\r\n                        resp.json().then(data => {\r\n                            if(data.success === true) {\r\n                                dispatch(showNotification(\"Пароль успешно изменен\"))\r\n                                localStorage.setItem('token', data.token)\r\n                                // resolve({data: {id: 1, password: \"\", oldPassword: \"\"}})\r\n                            } else {\r\n                                dispatch(showNotification(\"Текущий пароль введен неверно\", \"warning\"))\r\n                                // reject()\r\n                            }\r\n                        })\r\n                    })\r\n                });\r\n            }}\r\n        />\r\n    </Toolbar>\r\n};","import React from 'react';\r\nimport { Edit, PasswordInput, SimpleForm, required } from 'react-admin';\r\nimport { ProfileBottomToolbar } from './bottomToolbarProfile'\r\n\r\nconst ProfileEdit = ({ staticContext, ...props }) => {\r\n\r\n    const validateUserCreation = (values) => {\r\n        const errors = {};\r\n        if (values.password !== values.repeatPassword) {\r\n            errors.repeatPassword = ['Пароли должны совпадать'];\r\n        }\r\n        return errors\r\n    };\r\n\r\n    return (\r\n        <Edit\r\n            id={1}\r\n            resource=\"profile\"\r\n            basePath=\"/my-profile\"\r\n            title=\"Мой профиль\"\r\n            redirect={false}\r\n            {...props}\r\n        >\r\n            <SimpleForm toolbar={<ProfileBottomToolbar {...props} />} validate={validateUserCreation}>\r\n                <PasswordInput source=\"oldPassword\" label=\"Введите старый пароль\" validate={required()} />\r\n                <PasswordInput source=\"password\" label=\"Введите новый пароль\" validate={required()} />\r\n                <PasswordInput source=\"repeatPassword\" label=\"Введите новый пароль\" validate={required()} />\r\n            </SimpleForm>\r\n        </Edit>\r\n    );\r\n};\r\n\r\nexport default ProfileEdit;\r\n","import jsonServerProvider from 'ra-data-json-server';\r\n\r\nimport { fetchUtils } from 'react-admin';\r\nimport url from './url'\r\n\r\nconst httpClient = (url, options = {}) => {\r\n    if (!options.headers) {\r\n        options.headers = new Headers({ Accept: 'application/json' });\r\n    }\r\n    const token = localStorage.getItem('token');\r\n    if(token !== undefined) {\r\n        options.headers.set('Authorization', `${token}`);\r\n    }\r\n    return fetchUtils.fetchJson(url, options);\r\n};\r\n\r\nconst jsonServer = jsonServerProvider(url, httpClient)\r\n\r\n\r\nexport default dispatch => {\r\n    return {\r\n        ...jsonServer,\r\n        getOne: (resource, params) => {\r\n            if(resource === \"profile\") {\r\n                return Promise.resolve({\r\n                    data: {id: 1, password: \"\", oldPassword: \"\"},\r\n                });\r\n            } else {\r\n                return jsonServer.getOne(resource, params)\r\n            }\r\n        },\r\n        update: (resource, params) => {\r\n            if(resource === \"profile\") \r\n            {\r\n                const request = new Request(url + '/changePassword', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({ oldPassword: params.data.oldPassword, password: params.data.password }),\r\n                    headers: new Headers({ 'Content-Type': 'application/json' }),\r\n                });\r\n                return new Promise((resolve, reject) => {    \r\n                    fetch(request).then(resp => {\r\n                        resp.text().then(body => {\r\n                            if(body === \"true\") {\r\n                                // dispatch(showNotification(\"Все ок\"))\r\n                                resolve({data: {id: 1, password: \"\", oldPassword: \"\"}})\r\n                            } else {\r\n                                // dispatch(showNotification(\"Все не ок\", \"warning\"))\r\n                                reject()\r\n                            }\r\n                        })\r\n                    })\r\n                });\r\n            } else {\r\n                return jsonServer.update(resource, params)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import React from \"react\"\r\nimport { UserMenu, MenuItemLink, AppBar, Layout } from \"react-admin\"\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nconst CustomMenu = ({ ...props }) => {\r\n    const username = localStorage.getItem('username')\r\n    return <UserMenu label=\"Мой профиль\" {...props}>\r\n        <MenuItemLink\r\n            to=\"/my-profile\"\r\n            primaryText={username}\r\n            onClick={()=>{} }\r\n        />\r\n        <MenuItemLink\r\n            to=\"/my-profile\"\r\n            primaryText=\"Изменить пароль\"\r\n            leftIcon={<SettingsIcon />}\r\n        />\r\n    </UserMenu>\r\n}\r\n\r\nconst MyAppBar = props => <AppBar {...props} userMenu={<CustomMenu />} />;\r\n\r\nexport default props => <Layout {...props} appBar={MyAppBar} />;\r\n","import React from 'react';\r\nimport { Circle, Stage, Layer, Text } from 'react-konva';\r\n\r\nclass Editor extends React.Component  {  \r\n    stageWidth = 1000;\r\n\r\n    state = {\r\n        w: 1000\r\n    }\r\n\r\n    fitStageIntoParentContainer = () => {\r\n        var container = document.querySelector('#stage-parent');\r\n\r\n        // now we need to fit stage into parent\r\n        var containerWidth = container.offsetWidth;\r\n        // to do this we need to scale the stage\r\n        var scale = containerWidth / this.stageWidth;\r\n\r\n        this.setState({w: this.stageWidth * scale * 0.8});\r\n    }\r\n      \r\n    componentDidMount() {\r\n        this.fitStageIntoParentContainer()\r\n        window.addEventListener('resize', this.fitStageIntoParentContainer);\r\n    }\r\n\r\n    render() {\r\n        return <div id=\"stage-parent\">\r\n        <Stage width={this.state.w} height={300}>\r\n            <Layer>\r\n                <Circle\r\n                    x={10}\r\n                    y={20}\r\n                    draggable\r\n                    radius={50000}\r\n                    fill={\"red\"}\r\n                    />\r\n                <Text text={this.props.idDiscipline} fontSize=\"30\" />\r\n                <Text x={50} text={this.props.idTeacher} fontSize=\"30\" />\r\n            </Layer>\r\n        </Stage>\r\n    </div>\r\n    }\r\n}\r\n\r\nexport default Editor","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Admin, Resource, ReferenceInput } from 'react-admin';\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\nimport russianMessages from 'ra-language-russian';\nimport { OfficeList, OfficeEdit, OfficeCreate } from './office'\nimport { DisciplineList, DisciplineEdit, DisciplineCreate } from './discipline'\nimport { TeacherList, TeacherEdit, TeacherCreate } from './teacher'\nimport { GroupList, GroupEdit, GroupCreate } from './group'\nimport { LessonList, LessonEdit, LessonCreate } from './lesson'\nimport { UserCreate, UserEdit, UserList } from './user'\nimport GroupIcon from '@material-ui/icons/Group';\nimport PersonIcon from '@material-ui/icons/Person';\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\nimport BookIcon from '@material-ui/icons/Book';\nimport DateRangeRoundedIcon from '@material-ui/icons/DateRangeRounded';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport authProvider from './authProvider'\nimport ProfileEdit from './profileEdit';\nimport dataProvider from './dataProvider';\nimport CustomLayout from './appbar'\nimport Dashboard from './dashboard'\n\nReferenceInput.defaultProps.perPage=1000000000\n    \nconst i18nProvider = polyglotI18nProvider(() => russianMessages, 'ru')\n\nconst App = () => {\n    return <Admin i18nProvider={i18nProvider} dataProvider={dataProvider()} authProvider={authProvider} customRoutes={[<Route key=\"my-profile\" path=\"/my-profile\" component={ProfileEdit}/>]} appLayout={CustomLayout}>\n        { permissions => [\n        <Resource name=\"lessons\" list={LessonList} edit={LessonEdit} create={LessonCreate} options={{ label: 'Пары' }} icon={DateRangeRoundedIcon}/>,\n            <Resource name=\"offices\" list={OfficeList} edit={OfficeEdit} create={OfficeCreate} options={{ label: 'Аудитории' }} icon={MeetingRoomIcon} />,\n            <Resource name=\"disciplines\" list={DisciplineList} edit={DisciplineEdit} create={DisciplineCreate} options={{ label: 'Предметы' }} icon={BookIcon} />,\n            <Resource name=\"teachers\" list={TeacherList} edit={TeacherEdit} create={TeacherCreate} options={{ label: 'Преподаватели' }} icon={PersonIcon} />,\n            <Resource name=\"groups\" list={GroupList} edit={GroupEdit} create={GroupCreate} options={{ label: 'Группы' }} icon={GroupIcon} />,\n            <Resource name=\"profile\" />,\n            permissions.includes(\"ADMIN\") ? <Resource name=\"users\" list={UserList} edit={UserEdit} create={UserCreate} options={{ label: 'Пользователи' }} icon={SupervisorAccountIcon} /> : null,\n        ]}\n        \n    </Admin>\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}